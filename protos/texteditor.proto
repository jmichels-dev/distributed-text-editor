syntax = "proto3";

package chat;

// python -m grpc_tools.protoc --proto_path=./protos --python_out=. --grpc_python_out=. texteditor.proto

// Interface exported by the server.
service TextEditor {
    // A simple RPC.
    //
    // Saves file from client to primary server
    rpc SaveToServer(Download) returns (FileResponse) {}
    // Deletes file on primary server
    rpc DeleteFromServer(FileResponse) returns (FileResponse) {}
    // Send new edits from primary to backups
    rpc BackupEdits(KeepAliveRequest) returns (stream DownloadLst) {}
    // Opens new text file
    rpc OpenNewFile(Download) returns (FileResponse) {}
    // Opens existing text file
    rpc OpenExistingFile(Download) returns (stream Data) {}
    // Periodic messages from primary server to each backup server to 
    // determine if primary server or backup servers have failed
    rpc Heartbeats(stream KeepAliveRequest) returns (stream KeepAliveResponse) {}
}

message Download {
    string filename = 1;
    // bool newFileFlag = 2;
    bytes contents = 3;
}

message DownloadLst {
    repeated Download dLst = 1;
}

message FileResponse {
    bool errorFlag = 1;
    string filename = 2;
}

message Data {
    bytes data = 1;
}

// Periodic heartbeat requests and responses between primary and backups
message KeepAliveRequest {
    int32 backup_id = 1;
}

message KeepAliveResponse {
    int32 primary_id = 1;
    repeated int32 backup_ids = 2;
}

message Payload {
    string msg = 1;
}


